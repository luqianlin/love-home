server {
    listen 80;
    server_name lovehome.xin;

    # 对健康检查请求不进行重定向，直接代理到后端
    location = /api/health {
        proxy_pass http://localhost:8080/api/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_next_upstream off;
        proxy_read_timeout 10s;
        proxy_connect_timeout 10s;
        
        # 允许跨域请求
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        
        # 处理OPTIONS请求
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    # 另一个健康检查路径，不带/api前缀
    location = /health {
        proxy_pass http://localhost:8080/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_next_upstream off;
        proxy_read_timeout 10s;
        proxy_connect_timeout 10s;
        
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    }

    # 重定向HTTP到HTTPS（除了健康检查端点外的所有请求）
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2; # 启用HTTP/2
    server_name lovehome.xin;

    # 增加Nginx保持连接的设置
    keepalive_timeout 300; # 增加到300秒
    keepalive_requests 1000; # 增加单连接请求数
    
    # 禁用TCP连接的突然关闭，防止Connection:close头
    tcp_nodelay on;
    tcp_nopush on;
    
    # SSL配置 - 使用自签名证书，后续可以替换为正式证书
    ssl_certificate /var/www/love-home/18979882_lovehome.xin_nginx/lovehome.xin.pem;
    ssl_certificate_key /var/www/love-home/18979882_lovehome.xin_nginx/lovehome.xin.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off; # 关闭服务器密码套件偏好
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305'; # 更现代的密码套件
    ssl_session_cache shared:SSL:20m; # 增加缓存大小
    ssl_session_timeout 4h; # 增加会话超时
    
    # 增加SSL握手超时，防止连接中断
    ssl_handshake_timeout 20s; # 增加握手超时
    
    # 设置SSL缓冲区大小
    ssl_buffer_size 8k; # 增加缓冲区大小
    
    # 专门针对微信小程序的优化
    ssl_session_tickets on;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 114.114.114.114 valid=300s; # 增加国内DNS
    resolver_timeout 10s; # 增加解析超时

    # 专门的健康检查端点配置 - 特别允许微信小程序
    location = /health {
        proxy_pass http://localhost:8080/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_next_upstream off;
        proxy_read_timeout 60s; # 增加超时时间
        proxy_connect_timeout 10s;
        proxy_cache off;
        proxy_buffering off;
        
        # 确保保持连接 - 不设置Connection: close
        proxy_set_header Connection ""; # 移除Connection头
        
        # 微信小程序关键头信息
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Max-Age' '86400' always;
        add_header 'Connection' 'keep-alive' always;
        add_header 'Keep-Alive' 'timeout=300' always; # 增加Keep-Alive超时
        
        # 专门为微信小程序添加缓存控制头
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate' always;
        add_header 'Pragma' 'no-cache' always;
        add_header 'Expires' '0' always;
        
        # 处理OPTIONS请求
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    # API健康检查端点配置
    location = /api/health {
        proxy_pass http://localhost:8080/api/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_next_upstream off;
        proxy_read_timeout 60s; # 增加超时时间
        proxy_connect_timeout 10s;
        proxy_cache off;
        proxy_buffering off;
        
        # 确保保持连接
        proxy_set_header Connection "";
        
        # 允许跨域请求（对于健康检查很重要）
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        
        # 处理OPTIONS请求
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # API代理 - 注意端口是8080
    location /api {
        proxy_pass http://localhost:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 增加超时和请求大小设置
        proxy_read_timeout 60s;
        proxy_connect_timeout 10s;
        client_max_body_size 10m;
    }

    # 静态文件和前端SPA
    location / {
        # 先尝试文件系统中的静态文件
        root /var/www;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    # 自定义错误页面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
} 