---
description: 
globs: 
alwaysApply: true
---
// 零成本智慧社区平台开发规则

// 系统架构规范
- 前端：必须使用Vue3 + TailwindCSS构建响应式SPA应用
- 后端：必须采用Express.js提供RESTful API服务，严格遵循MVC架构
- 数据存储：使用MySQL 8.0(结构化数据)和Redis(缓存与投票计数)
- 地图服务：使用Leaflet + OpenStreetMap作为完全开源替代方案

// 代码开发原则
- 禁止重复造轮子：修改或新增能力前必须遍历项目所有文件确保不重复实现
- 真实实现原则：修改时必须保证真实实现，禁止模拟数据及模拟实现
- 能力完整性：禁止一切缩减当前能力的改动
- 开发规范性：禁止临时性的文件或能力的创建
- 前后端分离：能力要分离、模块化、通用性、易复用
- 系统性修复：务必保证系统性的修复，杜绝头痛医头
- 关联影响考虑：改动或新增代码时必须考虑关联影响并同步修正相关文件

// 功能模块规范
- 社区议事厅：Markdown格式提交，Redis原子计数投票，按照8.1字段规范实现
- 通知系统：必须支持紧急通知(Server酱+NodeMailer)与普通通知(Web Notification API)，按9.2流程实现
- 财务透明中心：前端CSV解析(PapaParse)，按8.3表单规范实现，支持在线答疑
- 工单管理系统：按9.1工单状态流转，实现48小时超时预警，使用8.2表单规范

// 多小区管理与LBS定位
- 必须实现电子围栏技术匹配用户所在小区
- 实现用户-小区多对多关系数据模型
- 提供小区切换API和多小区管理界面
- 确保数据查询时自动加入社区过滤条件

// 错误处理与安全规范
- 统一错误代码：严格按10.1错误代码表分类，返回格式符合10.2示例
- 数据安全：敏感字段AES-256加密，位置数据脱敏，强制HTTPS
- 访问控制：实现基于角色的权限控制系统

// 性能与运维规范
- 资源优化：使用7.1中的Nginx压缩和缓存配置
- 自动备份：实现7.2的自动化运维脚本
- 监控告警：实现7.3的监控与告警机制

// 测试与验收标准
- 必须覆盖10.1的核心场景测试
- 性能指标：首页加载<1.5秒，公告推送500条/分钟，并发投票100请求/秒

- 零成本部署：确保能在最低硬件配置(双核1.5GHz/2GB内存/50GB存储)上运行